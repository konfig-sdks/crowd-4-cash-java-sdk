/*
 * C4C REST API
 * Access to the Crowd4Cash Crowdlending Platform through an API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@crowd4cash.ch
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AccountStatement;
import com.konfigthis.client.model.AmortizationSchedule;
import com.konfigthis.client.model.Bid;
import com.konfigthis.client.model.Company;
import com.konfigthis.client.model.Crif;
import com.konfigthis.client.model.EarlyRepayment;
import com.konfigthis.client.model.Expenses;
import com.konfigthis.client.model.Financial;
import com.konfigthis.client.model.Income;
import com.konfigthis.client.model.ModelPrivate;
import com.konfigthis.client.model.Questionnaire;
import com.konfigthis.client.model.TechnicalData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Investment
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Investment {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_APPROVED = "dateApproved";
  @SerializedName(SERIALIZED_NAME_DATE_APPROVED)
  private String dateApproved;

  public static final String SERIALIZED_NAME_LOAN_AMOUNT = "loanAmount";
  @SerializedName(SERIALIZED_NAME_LOAN_AMOUNT)
  private Double loanAmount;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_DATE = "lastPaymentDate";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_DATE)
  private String lastPaymentDate;

  public static final String SERIALIZED_NAME_INTEREST_RATE = "interestRate";
  @SerializedName(SERIALIZED_NAME_INTEREST_RATE)
  private Double interestRate;

  public static final String SERIALIZED_NAME_PAYMENT_FREQUENCY = "paymentFrequency";
  @SerializedName(SERIALIZED_NAME_PAYMENT_FREQUENCY)
  private String paymentFrequency;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_BORROWER_TYPE = "borrowerType";
  @SerializedName(SERIALIZED_NAME_BORROWER_TYPE)
  private String borrowerType;

  public static final String SERIALIZED_NAME_BIDDING_TYPE = "biddingType";
  @SerializedName(SERIALIZED_NAME_BIDDING_TYPE)
  private String biddingType;

  public static final String SERIALIZED_NAME_LOAN_TYPE = "loanType";
  @SerializedName(SERIALIZED_NAME_LOAN_TYPE)
  private String loanType;

  public static final String SERIALIZED_NAME_LOAN_PURPOSE = "loanPurpose";
  @SerializedName(SERIALIZED_NAME_LOAN_PURPOSE)
  private String loanPurpose;

  public static final String SERIALIZED_NAME_LOAN_RATING = "loanRating";
  @SerializedName(SERIALIZED_NAME_LOAN_RATING)
  private String loanRating;

  public static final String SERIALIZED_NAME_LOAN_STATUS = "loanStatus";
  @SerializedName(SERIALIZED_NAME_LOAN_STATUS)
  private String loanStatus;

  public static final String SERIALIZED_NAME_PERFORMANCE_STATUS = "performanceStatus";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_STATUS)
  private String performanceStatus;

  public static final String SERIALIZED_NAME_DAYS_LATE = "daysLate";
  @SerializedName(SERIALIZED_NAME_DAYS_LATE)
  private Integer daysLate;

  public static final String SERIALIZED_NAME_COLLATERAL = "collateral";
  @SerializedName(SERIALIZED_NAME_COLLATERAL)
  private String collateral;

  public static final String SERIALIZED_NAME_COLLATERAL_TYPE = "collateralType";
  @SerializedName(SERIALIZED_NAME_COLLATERAL_TYPE)
  private String collateralType;

  public static final String SERIALIZED_NAME_INSURANCE = "insurance";
  @SerializedName(SERIALIZED_NAME_INSURANCE)
  private String insurance;

  public static final String SERIALIZED_NAME_TOTAL_PRINCIPAL_REMAINING = "totalPrincipalRemaining";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRINCIPAL_REMAINING)
  private Double totalPrincipalRemaining;

  public static final String SERIALIZED_NAME_TOTAL_REPAID_PRINCIPAL = "totalRepaidPrincipal";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPAID_PRINCIPAL)
  private Double totalRepaidPrincipal;

  public static final String SERIALIZED_NAME_TOTAL_REPAID_INTEREST = "totalRepaidInterest";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPAID_INTEREST)
  private Double totalRepaidInterest;

  public static final String SERIALIZED_NAME_BIDDING_END = "biddingEnd";
  @SerializedName(SERIALIZED_NAME_BIDDING_END)
  private String biddingEnd;

  public static final String SERIALIZED_NAME_INVESTMENT_DATE = "investmentDate";
  @SerializedName(SERIALIZED_NAME_INVESTMENT_DATE)
  private OffsetDateTime investmentDate;

  public static final String SERIALIZED_NAME_PURCHASE_DATE = "purchaseDate";
  @SerializedName(SERIALIZED_NAME_PURCHASE_DATE)
  private String purchaseDate;

  public static final String SERIALIZED_NAME_DISBURSEMENT_DATE = "disbursementDate";
  @SerializedName(SERIALIZED_NAME_DISBURSEMENT_DATE)
  private OffsetDateTime disbursementDate;

  public static final String SERIALIZED_NAME_MATURITY_DATE = "maturityDate";
  @SerializedName(SERIALIZED_NAME_MATURITY_DATE)
  private OffsetDateTime maturityDate;

  public static final String SERIALIZED_NAME_SHARE = "share";
  @SerializedName(SERIALIZED_NAME_SHARE)
  private Double share;

  public static final String SERIALIZED_NAME_V_FAC = "vFac";
  @SerializedName(SERIALIZED_NAME_V_FAC)
  private Double vFac;

  public static final String SERIALIZED_NAME_LOAN_POSITION = "loanPosition";
  @SerializedName(SERIALIZED_NAME_LOAN_POSITION)
  private Double loanPosition;

  public static final String SERIALIZED_NAME_AUTO_INVEST_ID = "autoInvestId";
  @SerializedName(SERIALIZED_NAME_AUTO_INVEST_ID)
  private Integer autoInvestId;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_BID = "bid";
  @SerializedName(SERIALIZED_NAME_BID)
  private Bid bid;

  public static final String SERIALIZED_NAME_BORROWER_PRIVATE = "borrowerPrivate";
  @SerializedName(SERIALIZED_NAME_BORROWER_PRIVATE)
  private ModelPrivate borrowerPrivate;

  public static final String SERIALIZED_NAME_BORROWER_COMPANY = "borrowerCompany";
  @SerializedName(SERIALIZED_NAME_BORROWER_COMPANY)
  private Company borrowerCompany;

  public static final String SERIALIZED_NAME_INCOME = "income";
  @SerializedName(SERIALIZED_NAME_INCOME)
  private Income income;

  public static final String SERIALIZED_NAME_EXPENSE = "expense";
  @SerializedName(SERIALIZED_NAME_EXPENSE)
  private Expenses expense;

  public static final String SERIALIZED_NAME_CRIF = "crif";
  @SerializedName(SERIALIZED_NAME_CRIF)
  private Crif crif;

  public static final String SERIALIZED_NAME_QUESTIONNAIRE = "questionnaire";
  @SerializedName(SERIALIZED_NAME_QUESTIONNAIRE)
  private Questionnaire questionnaire;

  public static final String SERIALIZED_NAME_FINANCIAL = "financial";
  @SerializedName(SERIALIZED_NAME_FINANCIAL)
  private Financial financial;

  public static final String SERIALIZED_NAME_AMORTIZATION_SCHEDULE = "amortizationSchedule";
  @SerializedName(SERIALIZED_NAME_AMORTIZATION_SCHEDULE)
  private AmortizationSchedule amortizationSchedule;

  public static final String SERIALIZED_NAME_EARLY_REPAYMENT = "earlyRepayment";
  @SerializedName(SERIALIZED_NAME_EARLY_REPAYMENT)
  private EarlyRepayment earlyRepayment;

  public static final String SERIALIZED_NAME_ACCOUNT_STATEMENT = "accountStatement";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_STATEMENT)
  private AccountStatement accountStatement;

  public static final String SERIALIZED_NAME_TECHNICAL_DATA = "technicalData";
  @SerializedName(SERIALIZED_NAME_TECHNICAL_DATA)
  private TechnicalData technicalData;

  public Investment() {
  }

  
  public Investment(
     Double loanPosition
  ) {
    this();
    this.loanPosition = loanPosition;
  }

  public Investment id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Investment ID - auto-generated
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3321", value = "Investment ID - auto-generated")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public Investment dateCreated(String dateCreated) {
    
    
    
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Date when the loan application is submitted
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "02.01.2021", value = "Date when the loan application is submitted")

  public String getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(String dateCreated) {
    
    
    
    this.dateCreated = dateCreated;
  }


  public Investment dateApproved(String dateApproved) {
    
    
    
    
    this.dateApproved = dateApproved;
    return this;
  }

   /**
   * Date when the loan is approved
   * @return dateApproved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "08.01.2021", value = "Date when the loan is approved")

  public String getDateApproved() {
    return dateApproved;
  }


  public void setDateApproved(String dateApproved) {
    
    
    
    this.dateApproved = dateApproved;
  }


  public Investment loanAmount(Double loanAmount) {
    
    
    
    
    this.loanAmount = loanAmount;
    return this;
  }

   /**
   * Loan amount
   * @return loanAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5000", value = "Loan amount")

  public Double getLoanAmount() {
    return loanAmount;
  }


  public void setLoanAmount(Double loanAmount) {
    
    
    
    this.loanAmount = loanAmount;
  }


  public Investment lastPaymentDate(String lastPaymentDate) {
    
    
    
    
    this.lastPaymentDate = lastPaymentDate;
    return this;
  }

   /**
   * Date of last payment received by the investor
   * @return lastPaymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "02.03.2021", value = "Date of last payment received by the investor")

  public String getLastPaymentDate() {
    return lastPaymentDate;
  }


  public void setLastPaymentDate(String lastPaymentDate) {
    
    
    
    this.lastPaymentDate = lastPaymentDate;
  }


  public Investment interestRate(Double interestRate) {
    
    
    
    
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Interest rate of the loan
   * @return interestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7.5", value = "Interest rate of the loan")

  public Double getInterestRate() {
    return interestRate;
  }


  public void setInterestRate(Double interestRate) {
    
    
    
    this.interestRate = interestRate;
  }


  public Investment paymentFrequency(String paymentFrequency) {
    
    
    
    
    this.paymentFrequency = paymentFrequency;
    return this;
  }

   /**
   * Payment frequency defines how often payments will be made
   * @return paymentFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Monthly", value = "Payment frequency defines how often payments will be made")

  public String getPaymentFrequency() {
    return paymentFrequency;
  }


  public void setPaymentFrequency(String paymentFrequency) {
    
    
    
    this.paymentFrequency = paymentFrequency;
  }


  public Investment duration(Integer duration) {
    
    
    
    
    this.duration = duration;
    return this;
  }

   /**
   * Duration in months
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "36", value = "Duration in months")

  public Integer getDuration() {
    return duration;
  }


  public void setDuration(Integer duration) {
    
    
    
    this.duration = duration;
  }


  public Investment borrowerType(String borrowerType) {
    
    
    
    
    this.borrowerType = borrowerType;
    return this;
  }

   /**
   * Type of the borrower - Private or SME
   * @return borrowerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Private", value = "Type of the borrower - Private or SME")

  public String getBorrowerType() {
    return borrowerType;
  }


  public void setBorrowerType(String borrowerType) {
    
    
    
    this.borrowerType = borrowerType;
  }


  public Investment biddingType(String biddingType) {
    
    
    
    
    this.biddingType = biddingType;
    return this;
  }

   /**
   * Type of the loan - Private or SME
   * @return biddingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Private loan", value = "Type of the loan - Private or SME")

  public String getBiddingType() {
    return biddingType;
  }


  public void setBiddingType(String biddingType) {
    
    
    
    this.biddingType = biddingType;
  }


  public Investment loanType(String loanType) {
    
    
    
    
    this.loanType = loanType;
    return this;
  }

   /**
   * Loan type - POS loan, Private and SME
   * @return loanType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "POS loan", value = "Loan type - POS loan, Private and SME")

  public String getLoanType() {
    return loanType;
  }


  public void setLoanType(String loanType) {
    
    
    
    this.loanType = loanType;
  }


  public Investment loanPurpose(String loanPurpose) {
    
    
    
    
    this.loanPurpose = loanPurpose;
    return this;
  }

   /**
   * Purpose of the loan
   * @return loanPurpose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Furnishing", value = "Purpose of the loan")

  public String getLoanPurpose() {
    return loanPurpose;
  }


  public void setLoanPurpose(String loanPurpose) {
    
    
    
    this.loanPurpose = loanPurpose;
  }


  public Investment loanRating(String loanRating) {
    
    
    
    
    this.loanRating = loanRating;
    return this;
  }

   /**
   * Rating of the loan - AA, A, B, C, D
   * @return loanRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "B", value = "Rating of the loan - AA, A, B, C, D")

  public String getLoanRating() {
    return loanRating;
  }


  public void setLoanRating(String loanRating) {
    
    
    
    this.loanRating = loanRating;
  }


  public Investment loanStatus(String loanStatus) {
    
    
    
    
    this.loanStatus = loanStatus;
    return this;
  }

   /**
   * Status of the loan
   * @return loanStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Active", value = "Status of the loan")

  public String getLoanStatus() {
    return loanStatus;
  }


  public void setLoanStatus(String loanStatus) {
    
    
    
    this.loanStatus = loanStatus;
  }


  public Investment performanceStatus(String performanceStatus) {
    
    
    
    
    this.performanceStatus = performanceStatus;
    return this;
  }

   /**
   * Payment status - performing, late 1 to 15 days, Defaulted
   * @return performanceStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Performing", value = "Payment status - performing, late 1 to 15 days, Defaulted")

  public String getPerformanceStatus() {
    return performanceStatus;
  }


  public void setPerformanceStatus(String performanceStatus) {
    
    
    
    this.performanceStatus = performanceStatus;
  }


  public Investment daysLate(Integer daysLate) {
    
    
    
    
    this.daysLate = daysLate;
    return this;
  }

   /**
   * Number od days late
   * @return daysLate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Number od days late")

  public Integer getDaysLate() {
    return daysLate;
  }


  public void setDaysLate(Integer daysLate) {
    
    
    
    this.daysLate = daysLate;
  }


  public Investment collateral(String collateral) {
    
    
    
    
    this.collateral = collateral;
    return this;
  }

   /**
   * Is loan collaterialized? - Yes, No
   * @return collateral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Is loan collaterialized? - Yes, No")

  public String getCollateral() {
    return collateral;
  }


  public void setCollateral(String collateral) {
    
    
    
    this.collateral = collateral;
  }


  public Investment collateralType(String collateralType) {
    
    
    
    
    this.collateralType = collateralType;
    return this;
  }

   /**
   * Collater Type - Real estate, Vehicle, Guarantor, Stock
   * @return collateralType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Vehicle", value = "Collater Type - Real estate, Vehicle, Guarantor, Stock")

  public String getCollateralType() {
    return collateralType;
  }


  public void setCollateralType(String collateralType) {
    
    
    
    this.collateralType = collateralType;
  }


  public Investment insurance(String insurance) {
    
    
    
    
    this.insurance = insurance;
    return this;
  }

   /**
   * Is loan insured? - Yes, No
   * @return insurance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Is loan insured? - Yes, No")

  public String getInsurance() {
    return insurance;
  }


  public void setInsurance(String insurance) {
    
    
    
    this.insurance = insurance;
  }


  public Investment totalPrincipalRemaining(Double totalPrincipalRemaining) {
    
    
    
    
    this.totalPrincipalRemaining = totalPrincipalRemaining;
    return this;
  }

   /**
   * Unpaid Principal
   * @return totalPrincipalRemaining
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4098.5", value = "Unpaid Principal")

  public Double getTotalPrincipalRemaining() {
    return totalPrincipalRemaining;
  }


  public void setTotalPrincipalRemaining(Double totalPrincipalRemaining) {
    
    
    
    this.totalPrincipalRemaining = totalPrincipalRemaining;
  }


  public Investment totalRepaidPrincipal(Double totalRepaidPrincipal) {
    
    
    
    
    this.totalRepaidPrincipal = totalRepaidPrincipal;
    return this;
  }

   /**
   * Currently paid principal
   * @return totalRepaidPrincipal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "901.5", value = "Currently paid principal")

  public Double getTotalRepaidPrincipal() {
    return totalRepaidPrincipal;
  }


  public void setTotalRepaidPrincipal(Double totalRepaidPrincipal) {
    
    
    
    this.totalRepaidPrincipal = totalRepaidPrincipal;
  }


  public Investment totalRepaidInterest(Double totalRepaidInterest) {
    
    
    
    
    this.totalRepaidInterest = totalRepaidInterest;
    return this;
  }

   /**
   * Currently paid interest
   * @return totalRepaidInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "60", value = "Currently paid interest")

  public Double getTotalRepaidInterest() {
    return totalRepaidInterest;
  }


  public void setTotalRepaidInterest(Double totalRepaidInterest) {
    
    
    
    this.totalRepaidInterest = totalRepaidInterest;
  }


  public Investment biddingEnd(String biddingEnd) {
    
    
    
    
    this.biddingEnd = biddingEnd;
    return this;
  }

   /**
   * End date of the project
   * @return biddingEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20.01.2021", value = "End date of the project")

  public String getBiddingEnd() {
    return biddingEnd;
  }


  public void setBiddingEnd(String biddingEnd) {
    
    
    
    this.biddingEnd = biddingEnd;
  }


  public Investment investmentDate(OffsetDateTime investmentDate) {
    
    
    
    
    this.investmentDate = investmentDate;
    return this;
  }

   /**
   * Date when the bid is placed
   * @return investmentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date when the bid is placed")

  public OffsetDateTime getInvestmentDate() {
    return investmentDate;
  }


  public void setInvestmentDate(OffsetDateTime investmentDate) {
    
    
    
    this.investmentDate = investmentDate;
  }


  public Investment purchaseDate(String purchaseDate) {
    
    
    
    
    this.purchaseDate = purchaseDate;
    return this;
  }

   /**
   * Date when the bid is paid by the investor
   * @return purchaseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date when the bid is paid by the investor")

  public String getPurchaseDate() {
    return purchaseDate;
  }


  public void setPurchaseDate(String purchaseDate) {
    
    
    
    this.purchaseDate = purchaseDate;
  }


  public Investment disbursementDate(OffsetDateTime disbursementDate) {
    
    
    
    
    this.disbursementDate = disbursementDate;
    return this;
  }

   /**
   * Date when the loan is paid to borrower
   * @return disbursementDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date when the loan is paid to borrower")

  public OffsetDateTime getDisbursementDate() {
    return disbursementDate;
  }


  public void setDisbursementDate(OffsetDateTime disbursementDate) {
    
    
    
    this.disbursementDate = disbursementDate;
  }


  public Investment maturityDate(OffsetDateTime maturityDate) {
    
    
    
    
    this.maturityDate = maturityDate;
    return this;
  }

   /**
   * Date of the last instalment
   * @return maturityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the last instalment")

  public OffsetDateTime getMaturityDate() {
    return maturityDate;
  }


  public void setMaturityDate(OffsetDateTime maturityDate) {
    
    
    
    this.maturityDate = maturityDate;
  }


  public Investment share(Double share) {
    
    
    
    
    this.share = share;
    return this;
  }

   /**
   * Share of outstanding Principal held by Fund
   * @return share
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.25", value = "Share of outstanding Principal held by Fund")

  public Double getShare() {
    return share;
  }


  public void setShare(Double share) {
    
    
    
    this.share = share;
  }


  public Investment vFac(Double vFac) {
    
    
    
    
    this.vFac = vFac;
    return this;
  }

   /**
   * Value Factor
   * @return vFac
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Value Factor")

  public Double getvFac() {
    return vFac;
  }


  public void setvFac(Double vFac) {
    
    
    
    this.vFac = vFac;
  }


   /**
   * Current Principal Balance according to Vfac
   * @return loanPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "120.6531", value = "Current Principal Balance according to Vfac")

  public Double getLoanPosition() {
    return loanPosition;
  }




  public Investment autoInvestId(Integer autoInvestId) {
    
    
    
    
    this.autoInvestId = autoInvestId;
    return this;
  }

   /**
   * Auto Invest Id. It can be null if auto invest is turned off
   * @return autoInvestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auto Invest Id. It can be null if auto invest is turned off")

  public Integer getAutoInvestId() {
    return autoInvestId;
  }


  public void setAutoInvestId(Integer autoInvestId) {
    
    
    
    this.autoInvestId = autoInvestId;
  }


  public Investment notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Description of the loan purpose
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Due to a worse year in 2018, liquidity has been weakened and certain renewals in the company are needed.", value = "Description of the loan purpose")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public Investment link(String link) {
    
    
    
    
    this.link = link;
    return this;
  }

   /**
   * Web page where loan is desplayed in UI
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://crowd4cash.ch/loan-details/2444", value = "Web page where loan is desplayed in UI")

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    
    
    
    this.link = link;
  }


  public Investment bid(Bid bid) {
    
    
    
    
    this.bid = bid;
    return this;
  }

   /**
   * Get bid
   * @return bid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Bid getBid() {
    return bid;
  }


  public void setBid(Bid bid) {
    
    
    
    this.bid = bid;
  }


  public Investment borrowerPrivate(ModelPrivate borrowerPrivate) {
    
    
    
    
    this.borrowerPrivate = borrowerPrivate;
    return this;
  }

   /**
   * Get borrowerPrivate
   * @return borrowerPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelPrivate getBorrowerPrivate() {
    return borrowerPrivate;
  }


  public void setBorrowerPrivate(ModelPrivate borrowerPrivate) {
    
    
    
    this.borrowerPrivate = borrowerPrivate;
  }


  public Investment borrowerCompany(Company borrowerCompany) {
    
    
    
    
    this.borrowerCompany = borrowerCompany;
    return this;
  }

   /**
   * Get borrowerCompany
   * @return borrowerCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Company getBorrowerCompany() {
    return borrowerCompany;
  }


  public void setBorrowerCompany(Company borrowerCompany) {
    
    
    
    this.borrowerCompany = borrowerCompany;
  }


  public Investment income(Income income) {
    
    
    
    
    this.income = income;
    return this;
  }

   /**
   * Get income
   * @return income
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Income getIncome() {
    return income;
  }


  public void setIncome(Income income) {
    
    
    
    this.income = income;
  }


  public Investment expense(Expenses expense) {
    
    
    
    
    this.expense = expense;
    return this;
  }

   /**
   * Get expense
   * @return expense
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Expenses getExpense() {
    return expense;
  }


  public void setExpense(Expenses expense) {
    
    
    
    this.expense = expense;
  }


  public Investment crif(Crif crif) {
    
    
    
    
    this.crif = crif;
    return this;
  }

   /**
   * Get crif
   * @return crif
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Crif getCrif() {
    return crif;
  }


  public void setCrif(Crif crif) {
    
    
    
    this.crif = crif;
  }


  public Investment questionnaire(Questionnaire questionnaire) {
    
    
    
    
    this.questionnaire = questionnaire;
    return this;
  }

   /**
   * Get questionnaire
   * @return questionnaire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Questionnaire getQuestionnaire() {
    return questionnaire;
  }


  public void setQuestionnaire(Questionnaire questionnaire) {
    
    
    
    this.questionnaire = questionnaire;
  }


  public Investment financial(Financial financial) {
    
    
    
    
    this.financial = financial;
    return this;
  }

   /**
   * Get financial
   * @return financial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Financial getFinancial() {
    return financial;
  }


  public void setFinancial(Financial financial) {
    
    
    
    this.financial = financial;
  }


  public Investment amortizationSchedule(AmortizationSchedule amortizationSchedule) {
    
    
    
    
    this.amortizationSchedule = amortizationSchedule;
    return this;
  }

   /**
   * Get amortizationSchedule
   * @return amortizationSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AmortizationSchedule getAmortizationSchedule() {
    return amortizationSchedule;
  }


  public void setAmortizationSchedule(AmortizationSchedule amortizationSchedule) {
    
    
    
    this.amortizationSchedule = amortizationSchedule;
  }


  public Investment earlyRepayment(EarlyRepayment earlyRepayment) {
    
    
    
    
    this.earlyRepayment = earlyRepayment;
    return this;
  }

   /**
   * Get earlyRepayment
   * @return earlyRepayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EarlyRepayment getEarlyRepayment() {
    return earlyRepayment;
  }


  public void setEarlyRepayment(EarlyRepayment earlyRepayment) {
    
    
    
    this.earlyRepayment = earlyRepayment;
  }


  public Investment accountStatement(AccountStatement accountStatement) {
    
    
    
    
    this.accountStatement = accountStatement;
    return this;
  }

   /**
   * Get accountStatement
   * @return accountStatement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountStatement getAccountStatement() {
    return accountStatement;
  }


  public void setAccountStatement(AccountStatement accountStatement) {
    
    
    
    this.accountStatement = accountStatement;
  }


  public Investment technicalData(TechnicalData technicalData) {
    
    
    
    
    this.technicalData = technicalData;
    return this;
  }

   /**
   * Get technicalData
   * @return technicalData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TechnicalData getTechnicalData() {
    return technicalData;
  }


  public void setTechnicalData(TechnicalData technicalData) {
    
    
    
    this.technicalData = technicalData;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Investment instance itself
   */
  public Investment putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Investment investment = (Investment) o;
    return Objects.equals(this.id, investment.id) &&
        Objects.equals(this.dateCreated, investment.dateCreated) &&
        Objects.equals(this.dateApproved, investment.dateApproved) &&
        Objects.equals(this.loanAmount, investment.loanAmount) &&
        Objects.equals(this.lastPaymentDate, investment.lastPaymentDate) &&
        Objects.equals(this.interestRate, investment.interestRate) &&
        Objects.equals(this.paymentFrequency, investment.paymentFrequency) &&
        Objects.equals(this.duration, investment.duration) &&
        Objects.equals(this.borrowerType, investment.borrowerType) &&
        Objects.equals(this.biddingType, investment.biddingType) &&
        Objects.equals(this.loanType, investment.loanType) &&
        Objects.equals(this.loanPurpose, investment.loanPurpose) &&
        Objects.equals(this.loanRating, investment.loanRating) &&
        Objects.equals(this.loanStatus, investment.loanStatus) &&
        Objects.equals(this.performanceStatus, investment.performanceStatus) &&
        Objects.equals(this.daysLate, investment.daysLate) &&
        Objects.equals(this.collateral, investment.collateral) &&
        Objects.equals(this.collateralType, investment.collateralType) &&
        Objects.equals(this.insurance, investment.insurance) &&
        Objects.equals(this.totalPrincipalRemaining, investment.totalPrincipalRemaining) &&
        Objects.equals(this.totalRepaidPrincipal, investment.totalRepaidPrincipal) &&
        Objects.equals(this.totalRepaidInterest, investment.totalRepaidInterest) &&
        Objects.equals(this.biddingEnd, investment.biddingEnd) &&
        Objects.equals(this.investmentDate, investment.investmentDate) &&
        Objects.equals(this.purchaseDate, investment.purchaseDate) &&
        Objects.equals(this.disbursementDate, investment.disbursementDate) &&
        Objects.equals(this.maturityDate, investment.maturityDate) &&
        Objects.equals(this.share, investment.share) &&
        Objects.equals(this.vFac, investment.vFac) &&
        Objects.equals(this.loanPosition, investment.loanPosition) &&
        Objects.equals(this.autoInvestId, investment.autoInvestId) &&
        Objects.equals(this.notes, investment.notes) &&
        Objects.equals(this.link, investment.link) &&
        Objects.equals(this.bid, investment.bid) &&
        Objects.equals(this.borrowerPrivate, investment.borrowerPrivate) &&
        Objects.equals(this.borrowerCompany, investment.borrowerCompany) &&
        Objects.equals(this.income, investment.income) &&
        Objects.equals(this.expense, investment.expense) &&
        Objects.equals(this.crif, investment.crif) &&
        Objects.equals(this.questionnaire, investment.questionnaire) &&
        Objects.equals(this.financial, investment.financial) &&
        Objects.equals(this.amortizationSchedule, investment.amortizationSchedule) &&
        Objects.equals(this.earlyRepayment, investment.earlyRepayment) &&
        Objects.equals(this.accountStatement, investment.accountStatement) &&
        Objects.equals(this.technicalData, investment.technicalData)&&
        Objects.equals(this.additionalProperties, investment.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dateCreated, dateApproved, loanAmount, lastPaymentDate, interestRate, paymentFrequency, duration, borrowerType, biddingType, loanType, loanPurpose, loanRating, loanStatus, performanceStatus, daysLate, collateral, collateralType, insurance, totalPrincipalRemaining, totalRepaidPrincipal, totalRepaidInterest, biddingEnd, investmentDate, purchaseDate, disbursementDate, maturityDate, share, vFac, loanPosition, autoInvestId, notes, link, bid, borrowerPrivate, borrowerCompany, income, expense, crif, questionnaire, financial, amortizationSchedule, earlyRepayment, accountStatement, technicalData, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Investment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateApproved: ").append(toIndentedString(dateApproved)).append("\n");
    sb.append("    loanAmount: ").append(toIndentedString(loanAmount)).append("\n");
    sb.append("    lastPaymentDate: ").append(toIndentedString(lastPaymentDate)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    paymentFrequency: ").append(toIndentedString(paymentFrequency)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    borrowerType: ").append(toIndentedString(borrowerType)).append("\n");
    sb.append("    biddingType: ").append(toIndentedString(biddingType)).append("\n");
    sb.append("    loanType: ").append(toIndentedString(loanType)).append("\n");
    sb.append("    loanPurpose: ").append(toIndentedString(loanPurpose)).append("\n");
    sb.append("    loanRating: ").append(toIndentedString(loanRating)).append("\n");
    sb.append("    loanStatus: ").append(toIndentedString(loanStatus)).append("\n");
    sb.append("    performanceStatus: ").append(toIndentedString(performanceStatus)).append("\n");
    sb.append("    daysLate: ").append(toIndentedString(daysLate)).append("\n");
    sb.append("    collateral: ").append(toIndentedString(collateral)).append("\n");
    sb.append("    collateralType: ").append(toIndentedString(collateralType)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    totalPrincipalRemaining: ").append(toIndentedString(totalPrincipalRemaining)).append("\n");
    sb.append("    totalRepaidPrincipal: ").append(toIndentedString(totalRepaidPrincipal)).append("\n");
    sb.append("    totalRepaidInterest: ").append(toIndentedString(totalRepaidInterest)).append("\n");
    sb.append("    biddingEnd: ").append(toIndentedString(biddingEnd)).append("\n");
    sb.append("    investmentDate: ").append(toIndentedString(investmentDate)).append("\n");
    sb.append("    purchaseDate: ").append(toIndentedString(purchaseDate)).append("\n");
    sb.append("    disbursementDate: ").append(toIndentedString(disbursementDate)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    vFac: ").append(toIndentedString(vFac)).append("\n");
    sb.append("    loanPosition: ").append(toIndentedString(loanPosition)).append("\n");
    sb.append("    autoInvestId: ").append(toIndentedString(autoInvestId)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    bid: ").append(toIndentedString(bid)).append("\n");
    sb.append("    borrowerPrivate: ").append(toIndentedString(borrowerPrivate)).append("\n");
    sb.append("    borrowerCompany: ").append(toIndentedString(borrowerCompany)).append("\n");
    sb.append("    income: ").append(toIndentedString(income)).append("\n");
    sb.append("    expense: ").append(toIndentedString(expense)).append("\n");
    sb.append("    crif: ").append(toIndentedString(crif)).append("\n");
    sb.append("    questionnaire: ").append(toIndentedString(questionnaire)).append("\n");
    sb.append("    financial: ").append(toIndentedString(financial)).append("\n");
    sb.append("    amortizationSchedule: ").append(toIndentedString(amortizationSchedule)).append("\n");
    sb.append("    earlyRepayment: ").append(toIndentedString(earlyRepayment)).append("\n");
    sb.append("    accountStatement: ").append(toIndentedString(accountStatement)).append("\n");
    sb.append("    technicalData: ").append(toIndentedString(technicalData)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("dateCreated");
    openapiFields.add("dateApproved");
    openapiFields.add("loanAmount");
    openapiFields.add("lastPaymentDate");
    openapiFields.add("interestRate");
    openapiFields.add("paymentFrequency");
    openapiFields.add("duration");
    openapiFields.add("borrowerType");
    openapiFields.add("biddingType");
    openapiFields.add("loanType");
    openapiFields.add("loanPurpose");
    openapiFields.add("loanRating");
    openapiFields.add("loanStatus");
    openapiFields.add("performanceStatus");
    openapiFields.add("daysLate");
    openapiFields.add("collateral");
    openapiFields.add("collateralType");
    openapiFields.add("insurance");
    openapiFields.add("totalPrincipalRemaining");
    openapiFields.add("totalRepaidPrincipal");
    openapiFields.add("totalRepaidInterest");
    openapiFields.add("biddingEnd");
    openapiFields.add("investmentDate");
    openapiFields.add("purchaseDate");
    openapiFields.add("disbursementDate");
    openapiFields.add("maturityDate");
    openapiFields.add("share");
    openapiFields.add("vFac");
    openapiFields.add("loanPosition");
    openapiFields.add("autoInvestId");
    openapiFields.add("notes");
    openapiFields.add("link");
    openapiFields.add("bid");
    openapiFields.add("borrowerPrivate");
    openapiFields.add("borrowerCompany");
    openapiFields.add("income");
    openapiFields.add("expense");
    openapiFields.add("crif");
    openapiFields.add("questionnaire");
    openapiFields.add("financial");
    openapiFields.add("amortizationSchedule");
    openapiFields.add("earlyRepayment");
    openapiFields.add("accountStatement");
    openapiFields.add("technicalData");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Investment
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Investment.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Investment is not found in the empty JSON string", Investment.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("dateCreated").isJsonNull() && (jsonObj.get("dateCreated") != null && !jsonObj.get("dateCreated").isJsonNull()) && !jsonObj.get("dateCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateCreated").toString()));
      }
      if (!jsonObj.get("dateApproved").isJsonNull() && (jsonObj.get("dateApproved") != null && !jsonObj.get("dateApproved").isJsonNull()) && !jsonObj.get("dateApproved").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateApproved` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateApproved").toString()));
      }
      if (!jsonObj.get("lastPaymentDate").isJsonNull() && (jsonObj.get("lastPaymentDate") != null && !jsonObj.get("lastPaymentDate").isJsonNull()) && !jsonObj.get("lastPaymentDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastPaymentDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastPaymentDate").toString()));
      }
      if (!jsonObj.get("paymentFrequency").isJsonNull() && (jsonObj.get("paymentFrequency") != null && !jsonObj.get("paymentFrequency").isJsonNull()) && !jsonObj.get("paymentFrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentFrequency").toString()));
      }
      if (!jsonObj.get("borrowerType").isJsonNull() && (jsonObj.get("borrowerType") != null && !jsonObj.get("borrowerType").isJsonNull()) && !jsonObj.get("borrowerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `borrowerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("borrowerType").toString()));
      }
      if (!jsonObj.get("biddingType").isJsonNull() && (jsonObj.get("biddingType") != null && !jsonObj.get("biddingType").isJsonNull()) && !jsonObj.get("biddingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `biddingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("biddingType").toString()));
      }
      if (!jsonObj.get("loanType").isJsonNull() && (jsonObj.get("loanType") != null && !jsonObj.get("loanType").isJsonNull()) && !jsonObj.get("loanType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanType").toString()));
      }
      if (!jsonObj.get("loanPurpose").isJsonNull() && (jsonObj.get("loanPurpose") != null && !jsonObj.get("loanPurpose").isJsonNull()) && !jsonObj.get("loanPurpose").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanPurpose` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanPurpose").toString()));
      }
      if (!jsonObj.get("loanRating").isJsonNull() && (jsonObj.get("loanRating") != null && !jsonObj.get("loanRating").isJsonNull()) && !jsonObj.get("loanRating").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanRating` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanRating").toString()));
      }
      if (!jsonObj.get("loanStatus").isJsonNull() && (jsonObj.get("loanStatus") != null && !jsonObj.get("loanStatus").isJsonNull()) && !jsonObj.get("loanStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loanStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loanStatus").toString()));
      }
      if (!jsonObj.get("performanceStatus").isJsonNull() && (jsonObj.get("performanceStatus") != null && !jsonObj.get("performanceStatus").isJsonNull()) && !jsonObj.get("performanceStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `performanceStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("performanceStatus").toString()));
      }
      if (!jsonObj.get("collateral").isJsonNull() && (jsonObj.get("collateral") != null && !jsonObj.get("collateral").isJsonNull()) && !jsonObj.get("collateral").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collateral` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collateral").toString()));
      }
      if (!jsonObj.get("collateralType").isJsonNull() && (jsonObj.get("collateralType") != null && !jsonObj.get("collateralType").isJsonNull()) && !jsonObj.get("collateralType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collateralType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collateralType").toString()));
      }
      if (!jsonObj.get("insurance").isJsonNull() && (jsonObj.get("insurance") != null && !jsonObj.get("insurance").isJsonNull()) && !jsonObj.get("insurance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insurance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insurance").toString()));
      }
      if (!jsonObj.get("biddingEnd").isJsonNull() && (jsonObj.get("biddingEnd") != null && !jsonObj.get("biddingEnd").isJsonNull()) && !jsonObj.get("biddingEnd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `biddingEnd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("biddingEnd").toString()));
      }
      if (!jsonObj.get("purchaseDate").isJsonNull() && (jsonObj.get("purchaseDate") != null && !jsonObj.get("purchaseDate").isJsonNull()) && !jsonObj.get("purchaseDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseDate").toString()));
      }
      if (!jsonObj.get("notes").isJsonNull() && (jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if (!jsonObj.get("link").isJsonNull() && (jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      // validate the optional field `bid`
      if (jsonObj.get("bid") != null && !jsonObj.get("bid").isJsonNull()) {
        Bid.validateJsonObject(jsonObj.getAsJsonObject("bid"));
      }
      // validate the optional field `borrowerPrivate`
      if (jsonObj.get("borrowerPrivate") != null && !jsonObj.get("borrowerPrivate").isJsonNull()) {
        ModelPrivate.validateJsonObject(jsonObj.getAsJsonObject("borrowerPrivate"));
      }
      // validate the optional field `borrowerCompany`
      if (jsonObj.get("borrowerCompany") != null && !jsonObj.get("borrowerCompany").isJsonNull()) {
        Company.validateJsonObject(jsonObj.getAsJsonObject("borrowerCompany"));
      }
      // validate the optional field `income`
      if (jsonObj.get("income") != null && !jsonObj.get("income").isJsonNull()) {
        Income.validateJsonObject(jsonObj.getAsJsonObject("income"));
      }
      // validate the optional field `expense`
      if (jsonObj.get("expense") != null && !jsonObj.get("expense").isJsonNull()) {
        Expenses.validateJsonObject(jsonObj.getAsJsonObject("expense"));
      }
      // validate the optional field `crif`
      if (jsonObj.get("crif") != null && !jsonObj.get("crif").isJsonNull()) {
        Crif.validateJsonObject(jsonObj.getAsJsonObject("crif"));
      }
      // validate the optional field `questionnaire`
      if (jsonObj.get("questionnaire") != null && !jsonObj.get("questionnaire").isJsonNull()) {
        Questionnaire.validateJsonObject(jsonObj.getAsJsonObject("questionnaire"));
      }
      // validate the optional field `financial`
      if (jsonObj.get("financial") != null && !jsonObj.get("financial").isJsonNull()) {
        Financial.validateJsonObject(jsonObj.getAsJsonObject("financial"));
      }
      // validate the optional field `amortizationSchedule`
      if (jsonObj.get("amortizationSchedule") != null && !jsonObj.get("amortizationSchedule").isJsonNull()) {
        AmortizationSchedule.validateJsonObject(jsonObj.getAsJsonObject("amortizationSchedule"));
      }
      // validate the optional field `earlyRepayment`
      if (jsonObj.get("earlyRepayment") != null && !jsonObj.get("earlyRepayment").isJsonNull()) {
        EarlyRepayment.validateJsonObject(jsonObj.getAsJsonObject("earlyRepayment"));
      }
      // validate the optional field `accountStatement`
      if (jsonObj.get("accountStatement") != null && !jsonObj.get("accountStatement").isJsonNull()) {
        AccountStatement.validateJsonObject(jsonObj.getAsJsonObject("accountStatement"));
      }
      // validate the optional field `technicalData`
      if (jsonObj.get("technicalData") != null && !jsonObj.get("technicalData").isJsonNull()) {
        TechnicalData.validateJsonObject(jsonObj.getAsJsonObject("technicalData"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Investment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Investment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Investment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Investment.class));

       return (TypeAdapter<T>) new TypeAdapter<Investment>() {
           @Override
           public void write(JsonWriter out, Investment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Investment read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Investment instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Investment given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Investment
  * @throws IOException if the JSON string is invalid with respect to Investment
  */
  public static Investment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Investment.class);
  }

 /**
  * Convert an instance of Investment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

